<Application x:Class="Netcorex.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:Netcorex.Converters"
             StartupUri="MainWindow.xaml"
             DispatcherUnhandledException="OnDispatcherUnhandledException">
  <Application.Resources>

    <!-- DEFAULT VALUES -->

    <Thickness x:Key="DefaultMarginThickness">1</Thickness>
    <Thickness x:Key="DefaultPaddingThickness">1</Thickness>
    <Thickness x:Key="DefaultBorderThickness">1</Thickness>
    <CornerRadius x:Key="DefaultCornerRadius">3</CornerRadius>
    <HorizontalAlignment x:Key="DefaultHorizontalAlignment">Stretch</HorizontalAlignment>
    <VerticalAlignment x:Key="DefaultVerticalAlignment">Top</VerticalAlignment>
    <HorizontalAlignment x:Key="DefaultHorizontalContentAlignment">Left</HorizontalAlignment>
    <VerticalAlignment x:Key="DefaultVerticalContentAlignment">Top</VerticalAlignment>
    <system:Double x:Key="DefaultLabelsColumnWidth">100</system:Double>

    <!-- COLORS -->

    <Color x:Key="ForeColor">#000000</Color>
    <SolidColorBrush x:Key="ForeColorBrush"
                     Color="{DynamicResource AccentColor}" />
    <Color x:Key="BackColor">#FFFFFF</Color>
    <SolidColorBrush x:Key="BackColorBrush"
                     Color="{DynamicResource AccentColor}" />
    <Color x:Key="BorderColor">#ECECEC</Color>
    <SolidColorBrush x:Key="BorderColorBrush"
                     Color="{DynamicResource AccentColor}" />
    <Color x:Key="AccentColor">#C0F422</Color>
    <SolidColorBrush x:Key="AccentColorBrush"
                     Color="{DynamicResource AccentColor}" />

    <!-- FONTS -->

    <FontFamily x:Key="FontAwesomeFontFamily">pack://application:,,,/Resources/Fonts/#FontAwesome</FontFamily>

    <!-- CONVERTERS -->

    <converters:BooleanVisibilityConverter x:Key="DefaultBooleanVisibilityConverter" />

    <!-- STYLES -->

    <!-- TABCONTROL -->

    <Style x:Key="DefaultTabControlStyle"
           TargetType="TabControl">
      <Setter Property="Margin"
              Value="3" />
    </Style>

    <!-- TEXTBOX -->

    <Style x:Key="DefaultTextBlockStyle"
           TargetType="TextBlock">
      <Setter Property="Margin"
              Value="{DynamicResource DefaultMarginThickness}" />
      <Setter Property="Padding"
              Value="{DynamicResource DefaultPaddingThickness}" />
      <Setter Property="HorizontalAlignment"
              Value="{DynamicResource DefaultHorizontalAlignment}" />
      <Setter Property="VerticalAlignment"
              Value="{DynamicResource DefaultVerticalAlignment}" />
      <Style.Triggers>
        <Trigger Property="Validation.HasError"
                 Value="true">
          <Setter Property="ToolTip"
                  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="LabelTextBlockStyle"
           TargetType="TextBlock"
           BasedOn="{StaticResource DefaultTextBlockStyle}">
      <Setter Property="HorizontalAlignment"
              Value="Right" />
      <Setter Property="VerticalAlignment"
              Value="Center" />
      <Setter Property="FontStyle"
              Value="Italic" />
    </Style>

    <Style x:Key="HeaderTextBlockStyle"
           TargetType="TextBlock"
           BasedOn="{StaticResource DefaultTextBlockStyle}">
      <Setter Property="HorizontalAlignment"
              Value="Center" />
      <Setter Property="VerticalAlignment"
              Value="Center" />
      <Setter Property="FontWeight"
              Value="Bold" />
    </Style>

    <Style x:Key="IconTextBlockStyle"
           TargetType="TextBlock"
           BasedOn="{StaticResource DefaultTextBlockStyle}">
      <Setter Property="HorizontalAlignment"
              Value="Center" />
      <Setter Property="VerticalAlignment"
              Value="Center" />
      <Setter Property="Foreground"
              Value="{DynamicResource AccentColorBrush}" />
      <Setter Property="FontFamily"
              Value="{DynamicResource FontAwesomeFontFamily}" />
    </Style>

    <!-- TEXTBOX -->

    <Style x:Key="DefaultTextBoxStyle"
           TargetType="TextBox">
      <Setter Property="Margin"
              Value="{DynamicResource DefaultMarginThickness}" />
      <Setter Property="Padding"
              Value="{DynamicResource DefaultPaddingThickness}" />
      <Setter Property="HorizontalAlignment"
              Value="{DynamicResource DefaultHorizontalAlignment}" />
      <Setter Property="VerticalAlignment"
              Value="{DynamicResource DefaultVerticalAlignment}" />
      <Setter Property="HorizontalContentAlignment"
              Value="{DynamicResource DefaultHorizontalContentAlignment}" />
      <Setter Property="VerticalContentAlignment"
              Value="{DynamicResource DefaultVerticalContentAlignment}" />
      <Style.Triggers>
        <Trigger Property="Validation.HasError"
                 Value="true">
          <Setter Property="ToolTip"
                  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <!-- TEXTAREA -->

    <Style x:Key="DefaultTextAreaStyle"
           TargetType="TextBox"
           BasedOn="{StaticResource DefaultTextBoxStyle}">
      <Setter Property="MinHeight"
              Value="50" />
      <Setter Property="TextWrapping"
              Value="Wrap" />
      <Setter Property="AcceptsReturn"
              Value="True" />
      <Setter Property="VerticalScrollBarVisibility"
              Value="Visible" />
    </Style>

    <Style x:Key="SmallTextAreaStyle"
           TargetType="TextBox"
           BasedOn="{StaticResource DefaultTextAreaStyle}">
      <Setter Property="Height"
              Value="50" />
    </Style>

    <Style x:Key="BigTextAreaStyle"
           TargetType="TextBox"
           BasedOn="{StaticResource DefaultTextAreaStyle}">
      <Setter Property="Height"
              Value="150" />
    </Style>

    <Style x:Key="FlowTextAreaStyle"
           TargetType="TextBox"
           BasedOn="{StaticResource DefaultTextAreaStyle}">
      <Setter Property="HorizontalAlignment"
              Value="Stretch" />
      <Setter Property="VerticalAlignment"
              Value="Stretch" />
    </Style>

    <!-- PASSWORDBOX -->

    <Style x:Key="DefaultPasswordBoxStyle"
           TargetType="PasswordBox">
      <Setter Property="Margin"
              Value="{DynamicResource DefaultMarginThickness}" />
      <Setter Property="Padding"
              Value="{DynamicResource DefaultPaddingThickness}" />
      <Setter Property="HorizontalAlignment"
              Value="{DynamicResource DefaultHorizontalAlignment}" />
      <Setter Property="VerticalAlignment"
              Value="{DynamicResource DefaultVerticalAlignment}" />
      <Setter Property="HorizontalContentAlignment"
              Value="{DynamicResource DefaultHorizontalContentAlignment}" />
      <Setter Property="VerticalContentAlignment"
              Value="{DynamicResource DefaultVerticalContentAlignment}" />
      <Style.Triggers>
        <Trigger Property="Validation.HasError"
                 Value="true">
          <Setter Property="ToolTip"
                  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <!-- COMBOBOX -->

    <Style x:Key="DefaultComboBoxStyle"
           TargetType="ComboBox">
      <Setter Property="Margin"
              Value="{DynamicResource DefaultMarginThickness}" />
      <Setter Property="Padding"
              Value="{DynamicResource DefaultPaddingThickness}" />
      <Setter Property="HorizontalAlignment"
              Value="{DynamicResource DefaultHorizontalAlignment}" />
      <Setter Property="VerticalAlignment"
              Value="{DynamicResource DefaultVerticalAlignment}" />
      <Setter Property="HorizontalContentAlignment"
              Value="{DynamicResource DefaultHorizontalContentAlignment}" />
      <Setter Property="VerticalContentAlignment"
              Value="{DynamicResource DefaultVerticalContentAlignment}" />
      <Style.Triggers>
        <Trigger Property="Validation.HasError"
                 Value="true">
          <Setter Property="ToolTip"
                  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <!-- CHECKBOX -->

    <Style x:Key="DefaultCheckBoxStyle"
           TargetType="CheckBox">
      <Setter Property="Margin"
              Value="{DynamicResource DefaultMarginThickness}" />
      <Setter Property="Padding"
              Value="{DynamicResource DefaultPaddingThickness}" />
      <Setter Property="HorizontalAlignment"
              Value="{DynamicResource DefaultHorizontalAlignment}" />
      <Setter Property="VerticalAlignment"
              Value="Center" />
      <Setter Property="HorizontalContentAlignment"
              Value="{DynamicResource DefaultHorizontalContentAlignment}" />
      <Setter Property="VerticalContentAlignment"
              Value="{DynamicResource DefaultVerticalContentAlignment}" />
      <Style.Triggers>
        <Trigger Property="Validation.HasError"
                 Value="true">
          <Setter Property="ToolTip"
                  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <!-- DATEPICKER -->

    <Style x:Key="DefaultDatePickerStyle"
           TargetType="DatePicker">
      <Setter Property="Margin"
              Value="{DynamicResource DefaultMarginThickness}" />
      <Setter Property="Padding"
              Value="{DynamicResource DefaultPaddingThickness}" />
      <Setter Property="HorizontalAlignment"
              Value="{DynamicResource DefaultHorizontalAlignment}" />
      <Setter Property="VerticalAlignment"
              Value="{DynamicResource DefaultVerticalAlignment}" />
      <Setter Property="HorizontalContentAlignment"
              Value="{DynamicResource DefaultHorizontalContentAlignment}" />
      <Setter Property="VerticalContentAlignment"
              Value="{DynamicResource DefaultVerticalContentAlignment}" />
      <Style.Triggers>
        <Trigger Property="Validation.HasError"
                 Value="true">
          <Setter Property="ToolTip"
                  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <!-- DATEPICKER -->

    <Style x:Key="DefaultSliderStyle"
           TargetType="Slider">
      <Setter Property="Margin"
              Value="{DynamicResource DefaultMarginThickness}" />
      <Setter Property="Padding"
              Value="{DynamicResource DefaultPaddingThickness}" />
      <Style.Triggers>
        <Trigger Property="Validation.HasError"
                 Value="true">
          <Setter Property="ToolTip"
                  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <!-- LISTBOX -->

    <Style x:Key="DefaultListBoxStyle"
           TargetType="ListBox">
      <Setter Property="Margin"
              Value="{DynamicResource DefaultMarginThickness}" />
      <Setter Property="Padding"
              Value="{DynamicResource DefaultPaddingThickness}" />
      <Setter Property="HorizontalAlignment"
              Value="{DynamicResource DefaultHorizontalAlignment}" />
      <!--<Setter Property="VerticalAlignment"
              Value="{DynamicResource DefaultVerticalAlignment}" />-->
      <Setter Property="HorizontalContentAlignment"
              Value="{DynamicResource DefaultHorizontalContentAlignment}" />
      <Setter Property="VerticalContentAlignment"
              Value="{DynamicResource DefaultVerticalContentAlignment}" />
      <Style.Triggers>
        <Trigger Property="Validation.HasError"
                 Value="true">
          <Setter Property="ToolTip"
                  Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
        </Trigger>
      </Style.Triggers>
    </Style>


    <!-- BUTTONS -->

    <Style x:Key="DefaultButtonStyle"
           TargetType="Button">
      <Setter Property="Margin"
              Value="{DynamicResource DefaultMarginThickness}" />
      <Setter Property="Padding"
              Value="{DynamicResource DefaultPaddingThickness}" />
      <Setter Property="HorizontalAlignment"
              Value="{DynamicResource DefaultHorizontalAlignment}" />
      <Setter Property="VerticalAlignment"
              Value="{DynamicResource DefaultVerticalAlignment}" />
      <Setter Property="HorizontalContentAlignment"
              Value="Center" />
      <Setter Property="VerticalContentAlignment"
              Value="Center" />
    </Style>

    <!-- EXPANDERS -->

    <Style x:Key="DefaultExpanderStyle"
           TargetType="Expander">
      <Setter Property="Margin"
              Value="{DynamicResource DefaultMarginThickness}" />
      <Setter Property="Padding"
              Value="{DynamicResource DefaultPaddingThickness}" />
      <Setter Property="BorderThickness"
              Value="{DynamicResource DefaultBorderThickness}" />
      <Setter Property="BorderBrush"
              Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
      <Setter Property="Background"
              Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    </Style>

    <!-- BORDERS -->

    <Style x:Key="SystemBorderStyle"
           TargetType="Border">
      <Setter Property="Margin"
              Value="{DynamicResource DefaultMarginThickness}" />
      <Setter Property="Padding"
              Value="{DynamicResource DefaultPaddingThickness}" />
      <Setter Property="CornerRadius"
              Value="{DynamicResource DefaultCornerRadius}" />
      <Setter Property="BorderThickness"
              Value="{DynamicResource DefaultBorderThickness}" />
      <Setter Property="BorderBrush"
              Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
      <Setter Property="Background"
              Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    </Style>

  </Application.Resources>
</Application>
